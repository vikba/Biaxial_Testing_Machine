digraph "classes_Biaxial_Testing_Machine" {
rankdir=BT
charset="utf-8"
"sources.biaxmainwindow.BiaxMainWindow" [color="black", fontcolor="black", label=<{BiaxMainWindow|cycl_num : int<br ALIGN="LEFT"/>end_force1 : float<br ALIGN="LEFT"/>end_force2 : float<br ALIGN="LEFT"/>fl_label_color : bool<br ALIGN="LEFT"/>test_duration : float<br ALIGN="LEFT"/>|closeEvent(event)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.mechanicaltests.DisplacementControlTest" [color="black", fontcolor="black", label=<{DisplacementControlTest|<br ALIGN="LEFT"/>|run()<br ALIGN="LEFT"/>update_speed(val1, val2)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.loadcalculator.LoadCalculatorWindow" [color="black", fontcolor="black", label=<{LoadCalculatorWindow|load1<br ALIGN="LEFT"/>load2<br ALIGN="LEFT"/>signal_loads_calculated<br ALIGN="LEFT"/>|calcLoads()<br ALIGN="LEFT"/><I>closeEvent</I>(event)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.mechanicaltests.LoadControlTest" [color="black", fontcolor="black", label=<{LoadControlTest|<br ALIGN="LEFT"/>|increase_desired_force(start_force, end_force, duration, current_time)<br ALIGN="LEFT"/>run()<br ALIGN="LEFT"/>updatePID(P1, I1, D1, P2, I2, D2)<br ALIGN="LEFT"/>update_parameters(end_force1, end_force2, test_duration, num_cycles)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.mechanicaltests.MechanicalTest" [color="black", fontcolor="black", label=<{MechanicalTest|marks_groups : list<br ALIGN="LEFT"/>res_x : int<br ALIGN="LEFT"/>res_y : int<br ALIGN="LEFT"/>signal_change_pixmap<br ALIGN="LEFT"/>signal_update_charts<br ALIGN="LEFT"/>signal_update_force_label<br ALIGN="LEFT"/>thread<br ALIGN="LEFT"/>|changeFolder(folder)<br ALIGN="LEFT"/>getMarksStatus()<br ALIGN="LEFT"/>initMotZeroPos()<br ALIGN="LEFT"/>marksRecorded(lst)<br ALIGN="LEFT"/>moveSamplePosition()<br ALIGN="LEFT"/>moveVelocityAx1(speed)<br ALIGN="LEFT"/>moveVelocityAx2(speed)<br ALIGN="LEFT"/>readForceLive()<br ALIGN="LEFT"/>run()<br ALIGN="LEFT"/>setThread(thread)<br ALIGN="LEFT"/>stop()<br ALIGN="LEFT"/>stop_measurement()<br ALIGN="LEFT"/>zeroForce()<br ALIGN="LEFT"/>zeroPosition()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.mplwidget.MplWidget" [color="black", fontcolor="black", label=<{MplWidget|canvas<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"sources.pid.PID" [color="black", fontcolor="black", label=<{PID|Kd<br ALIGN="LEFT"/>Ki<br ALIGN="LEFT"/>Kp<br ALIGN="LEFT"/>integral : int<br ALIGN="LEFT"/>prev_error : int<br ALIGN="LEFT"/>setpoint : int<br ALIGN="LEFT"/>|reset()<br ALIGN="LEFT"/>setPID(P, I, D)<br ALIGN="LEFT"/>updateOutput(measured_value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.camerawindow.VideoThread" [color="black", fontcolor="black", label=<{VideoThread|res_x_full : int<br ALIGN="LEFT"/>res_y_full : int<br ALIGN="LEFT"/>signal_change_pixmap<br ALIGN="LEFT"/>signal_marks_recorded<br ALIGN="LEFT"/>|run()<br ALIGN="LEFT"/>startStopTracking(flag)<br ALIGN="LEFT"/>stop()<br ALIGN="LEFT"/>update_roi(x1, y1, x2, y2)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.camerawindow.VideoWindow" [color="black", fontcolor="black", label=<{VideoWindow|res_x : int<br ALIGN="LEFT"/>res_y : int<br ALIGN="LEFT"/>signal_update_roi<br ALIGN="LEFT"/>thread<br ALIGN="LEFT"/>|closeEvent(event)<br ALIGN="LEFT"/>mouseMoveEvent(event)<br ALIGN="LEFT"/>mousePressEvent(event)<br ALIGN="LEFT"/>mouseReleaseEvent(event)<br ALIGN="LEFT"/>startStopTracking(flag)<br ALIGN="LEFT"/>stop_webcam()<br ALIGN="LEFT"/>update_image(cv_img)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.markersdetection.markersDetection" [color="black", fontcolor="black", label=<{markersDetection|<br ALIGN="LEFT"/>|detectMarkers(image)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"sources.mechanicaltests.DisplacementControlTest" -> "sources.mechanicaltests.MechanicalTest" [arrowhead="empty", arrowtail="none"];
"sources.mechanicaltests.LoadControlTest" -> "sources.mechanicaltests.MechanicalTest" [arrowhead="empty", arrowtail="none"];
"sources.camerawindow.VideoThread" -> "sources.biaxmainwindow.BiaxMainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_video_thread", style="solid"];
"sources.camerawindow.VideoWindow" -> "sources.biaxmainwindow.BiaxMainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_video_window", style="solid"];
"sources.mechanicaltests.DisplacementControlTest" -> "sources.biaxmainwindow.BiaxMainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_mecTest", style="solid"];
"sources.mechanicaltests.LoadControlTest" -> "sources.biaxmainwindow.BiaxMainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_mecTest", style="solid"];
"sources.mechanicaltests.LoadControlTest" -> "sources.biaxmainwindow.BiaxMainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_mecTest", style="solid"];
"sources.mechanicaltests.MechanicalTest" -> "sources.biaxmainwindow.BiaxMainWindow" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_mecTest", style="solid"];
"sources.pid.PID" -> "sources.mechanicaltests.LoadControlTest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_pid_1", style="solid"];
"sources.pid.PID" -> "sources.mechanicaltests.LoadControlTest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_pid_2", style="solid"];
}
